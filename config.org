#+TITLE: Emacs Configuration
#+AUTHOR: Eduardo de Oliveira Padoan

* Files and paths

** init.el
   Main configuration file
** keys.el
   Custom Keybings
** funcs.el
   Custom Functions
** alias.el
   Command Aliases
** python.el
   Python options
** lisp/
   Other emacs-lisp sources
** snippets/
   Yasnippet collection
** backups/ and auto-save-list/
   Backups and auto-saves files (not versioned)

#+begin_src emacs-lisp
(load-file "~/.emacs.d/keys.el")
(load-file "~/.emacs.d/funcs.el")
(load-file "~/.emacs.d/alias.el")
(load-file "~/.emacs.d/python.el")

(add-to-list 'load-path "~/.emacs.d/lisp/")

;; Registers
;; 'C-x r j i' -> this file
(set-register ?i '(file . "~/.emacs.d/init.el"))
;; 'C-x r j f' -> functions
(set-register ?f '(file . "~/.emacs.d/funcs.el"))
;; 'C-x r j k' -> keybindings
(set-register ?k '(file . "~/.emacs.d/keys.el"))
;; 'C-x r j a' -> aliases
(set-register ?a '(file . "~/.emacs.d/alias.el"))
;; 'C-x r j p' -> python confs
(set-register ?a '(file . "~/.emacs.d/python.el"))

;; Keep all backup and auto-save files in one directory
(setq backup-directory-alist '(("." . "~/.emacs.d/backups")))
(setq auto-save-file-name-transforms '((".*" "~/.emacs.d/auto-save-list/" t)))
#+end_src


* Personal Information

#+begin_src emacs-lisp
(setq user-full-name "Eduardo de Oliveira Padoan"
      user-mail-address "eduardo.padoan@gmail.com")
#+end_src
  
* Customize settings

Set up the customize file to its own separate file, instead of saving
customize settings in [[file:init.el][init.el]]. 

#+begin_src emacs-lisp
(setq custom-file (expand-file-name "custom.el" user-emacs-directory))
(load custom-file)
#+end_src

* Sane defaults

Let's start with some sane defaults, shall we?

Sources for this section include [[https://github.com/magnars/.emacs.d/blob/master/settings/sane-defaults.el][Magnars Sveen]] and [[http://pages.sachachua.com/.emacs.d/Sacha.html][Sacha Chua]].

#+begin_src emacs-lisp
;; These functions are useful. Activate them.
(put 'downcase-region 'disabled nil)
(put 'upcase-region 'disabled nil)
(put 'narrow-to-region 'disabled nil)
(put 'dired-find-alternate-file 'disabled nil)

;; Answering just 'y' or 'n' will do
(defalias 'yes-or-no-p 'y-or-n-p)

;; UTF-8 please
(setq locale-coding-system 'utf-8) ; pretty
(set-terminal-coding-system 'utf-8) ; pretty
(set-keyboard-coding-system 'utf-8) ; pretty
(set-selection-coding-system 'utf-8) ; please
(prefer-coding-system 'utf-8) ; with sugar on top
(setq-default indent-tabs-mode nil)

;; Turn off the blinking cursor
(blink-cursor-mode -1)

(setq-default indent-tabs-mode nil)
(setq-default indicate-empty-lines t)

;; Don't count two spaces after a period as the end of a sentence.
;; Just one space is needed.
(setq sentence-end-double-space nil)

;; delete the region when typing, just like as we expect nowadays.
(delete-selection-mode t)

(show-paren-mode t)

(column-number-mode t)

(global-visual-line-mode)
(diminish 'visual-line-mode)

(setq uniquify-buffer-name-style 'forward)

;; -i gets alias definitions from .bash_profile
(setq shell-command-switch "-ic")

;; Don't beep at me
(setq visible-bell t)

;; Move files to trash when deleting
(setq delete-by-moving-to-trash t)
#+end_src

The following function for ~occur-dwim~ is taken from [[https://github.com/abo-abo][Oleh Krehel]] from
[[http://oremacs.com/2015/01/26/occur-dwim/][his blog post at (or emacs]]. It takes the current region or the symbol
at point as the default value for occur.

#+begin_src emacs-lisp
(defun occur-dwim ()
  "Call `occur' with a sane default."
  (interactive)
  (push (if (region-active-p)
            (buffer-substring-no-properties
             (region-beginning)
             (region-end))
          (thing-at-point 'symbol))
        regexp-history)
  (call-interactively 'occur))

(bind-key "M-s o" 'occur-dwim)
#+end_src
